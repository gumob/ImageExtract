language: objective-c
os: osx
osx_image: xcode10.2

#branches:
#  only:
#    - master
#    - develop
#    - "/^v?[0-9\\.]+/"

cache:
  bundler: true
  cocoapods: true
  directories:
    - Carthage
    - Submodule

env:
  global:
    - secure: IsSPmEYizg0SVZoWqO8JnSgCKlNSBLIFs+XZjOCjb12Z+YToMS3tmo+EYrmaKNJRMrvJEFyRlgyxlyEQGHc57eFGzZAjLGsiiIu++xY7AzDALC+CDG3w2daNF+pWXX58145Wj5CpOrkauF+DHUMYCQWa3g4JGoMmP001fjKlF+9TUF7K017Ae6awVu3YFJqvO2KuCEpe3J7b6Ii0hjUEnHMzHgK+ZFwGbc8QXz21AGO5YXT3+6zxaLB4TdEyazRC/QxaDBpmSE8k4RMeOXBTbwhpJhWbrDuGGJWw46yO006d7YdU8+fkf6hSBswN5YGbOga8dwRB4vVilJ6P8iiUV9QL4C1BxU8jFBkil563o5mbl6MZrEjXPQuvwyB9xSf6LGjYyVXrAVj6nIar+QcfwSIqn2520qYxrYo5CAaZ/9ozmRg4v4fbnA6m2fEW1lI7USQGKcByit6ZGxQQ6YwdS0mw83fvGotxptgc/by2e7b1O64i2BWEh/5fHt/B3+6j7HkzDHvMKoOgFoNKMbrtEit9R7Dnrdsgd0awVnQzY0EdWdmYGH1A9h9pHJhmEoQq2S1X2tOf1WC0y67dY1FIMMk+27dn7ZBTsmKKdQf/RCYNSxhzHFjyaMr5nBkqxf4UV73l0JMT6Nhi5KrSCIYnOUA9peEETXmo9oBssPuVHSk=
    - XCODE_PROJECT="ImageExtract.xcodeproj"
    - IOS_SCHEME="ImageExtract-iOS"
    - MACOS_SCHEME="ImageExtract-macOS"
    - TVOS_SCHEME="ImageExtract-tvOS"

matrix:
  include:
    # iOS Tests
    - env: SCHEME="$IOS_SCHEME"   DESTINATION="OS=12.1,name=iPhone X"       RUN_TESTS="YES" LINT="NO"  $CARTHAGE_PLATFORM="iOS" COVERAGE="YES" CODECOV_FLAG="ios12"
    - env: SCHEME="$IOS_SCHEME"   DESTINATION="OS=11.4,name=iPhone 7 Plus"  RUN_TESTS="YES" LINT="YES" $CARTHAGE_PLATFORM="iOS" COVERAGE="NO"  CODECOV_FLAG="ios11"
    - env: SCHEME="$IOS_SCHEME"   DESTINATION="OS=10.3.1,name=iPhone 6"     RUN_TESTS="YES" LINT="NO"  $CARTHAGE_PLATFORM="iOS" COVERAGE="NO"  CODECOV_FLAG="ios10"
    - env: SCHEME="$IOS_SCHEME"   DESTINATION="OS=9.3,name=iPhone 5s"       RUN_TESTS="YES" LINT="NO"  $CARTHAGE_PLATFORM="iOS" COVERAGE="NO"  CODECOV_FLAG="ios9"
    # tvOS Tests
    - env: SCHEME="$TVOS_SCHEME"  DESTINATION="OS=12.1,name=Apple TV 4K"    RUN_TESTS="YES" LINT="NO"  $CARTHAGE_PLATFORM="tvOS" COVERAGE="NO"  CODECOV_FLAG="tvos12"
    - env: SCHEME="$TVOS_SCHEME"  DESTINATION="OS=11.4,name=Apple TV 4K"    RUN_TESTS="YES" LINT="NO"  $CARTHAGE_PLATFORM="tvOS" COVERAGE="NO"  CODECOV_FLAG="tvos11"
    - env: SCHEME="$TVOS_SCHEME"  DESTINATION="OS=10.2,name=Apple TV 1080p" RUN_TESTS="YES" LINT="NO"  $CARTHAGE_PLATFORM="tvOS" COVERAGE="NO"  CODECOV_FLAG="tvos10"
    # macOS Tests
    - env: SCHEME="$MACOS_SCHEME" DESTINATION="arch=x86_64"                 RUN_TESTS="YES" LINT="NO"  $CARTHAGE_PLATFORM="Mac"  COVERAGE="NO"  CODECOV_FLAG="macos"

before_install:
  # Workaround for “Library not loaded: /usr/lib/libauto.dylib”; see:
  #   https://stackoverflow.com/questions/55389080/xcode-10-2-failed-to-run-app-on-simulator-with-ios-10
  #   https://developer.apple.com/documentation/xcode_release_notes/xcode_10_2_1_release_notes
  - if [ "$DESTINATION" == "OS=9.3,name=iPhone 5s" ]; then
    sudo mkdir '/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 9.3.simruntime/Contents/Resources/RuntimeRoot/usr/lib/swift';
    fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then
    gem install cocoapods --no-document --quiet;
    gem install xcpretty --no-document --quiet;
    pod repo update;
    brew update;
    brew outdated carthage || brew upgrade carthage;
    carthage bootstrap --verbose --no-use-binaries --platform $CARTHAGE_PLATFORM --cache-builds;
    fi

install:
  - ./install-swiftlint.sh;

script:
  - set -o pipefail;
  - swift -version;

  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then
    xcrun simctl list;
    xcodebuild -version;
    xcodebuild -showsdks;
    xcodebuild -list;
    fi

  - if [ "$RUN_TESTS" == "YES" ]; then
    xcodebuild clean test -project "$XCODE_PROJECT" -scheme "$SCHEME" -destination "$DESTINATION" -enableCodeCoverage $COVERAGE | xcpretty -c;
    elif [ "$RUN_TESTS" == "NO" ]; then
    xcodebuild clean build -project "$XCODE_PROJECT" -scheme "$SCHEME" -destination "$DESTINATION" -configuration Release | xcpretty -c;
    fi

  - if [ "$LINT" == "YES" ]; then
    swiftlint;
    carthage build --platform "$CARTHAGE_PLATFORM" --no-skip-current --cache-builds --verbose;
    fi

after_success:
  - if [ "$COVERAGE" == "YES" ]; then
    bash <(curl -s https://codecov.io/bash) -J 'ImageExtract' -cF "$CODECOV_FLAG";
    fi

notifications:
  email: false
