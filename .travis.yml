branches:
  only:
    - master
    - "/^v?[0-9\\.]+/"
    - hotfix/memory-leak

cache:
  directories:
    - Carthage
    - Submodule

env:
  global:
    - secure: IsSPmEYizg0SVZoWqO8JnSgCKlNSBLIFs+XZjOCjb12Z+YToMS3tmo+EYrmaKNJRMrvJEFyRlgyxlyEQGHc57eFGzZAjLGsiiIu++xY7AzDALC+CDG3w2daNF+pWXX58145Wj5CpOrkauF+DHUMYCQWa3g4JGoMmP001fjKlF+9TUF7K017Ae6awVu3YFJqvO2KuCEpe3J7b6Ii0hjUEnHMzHgK+ZFwGbc8QXz21AGO5YXT3+6zxaLB4TdEyazRC/QxaDBpmSE8k4RMeOXBTbwhpJhWbrDuGGJWw46yO006d7YdU8+fkf6hSBswN5YGbOga8dwRB4vVilJ6P8iiUV9QL4C1BxU8jFBkil563o5mbl6MZrEjXPQuvwyB9xSf6LGjYyVXrAVj6nIar+QcfwSIqn2520qYxrYo5CAaZ/9ozmRg4v4fbnA6m2fEW1lI7USQGKcByit6ZGxQQ6YwdS0mw83fvGotxptgc/by2e7b1O64i2BWEh/5fHt/B3+6j7HkzDHvMKoOgFoNKMbrtEit9R7Dnrdsgd0awVnQzY0EdWdmYGH1A9h9pHJhmEoQq2S1X2tOf1WC0y67dY1FIMMk+27dn7ZBTsmKKdQf/RCYNSxhzHFjyaMr5nBkqxf4UV73l0JMT6Nhi5KrSCIYnOUA9peEETXmo9oBssPuVHSk=
    - XCODEPROJ="ImageExtract.xcodeproj"
    - IOS_SCHEME="ImageExtract-iOS"
    - MACOS_SCHEME="ImageExtract-macOS"
    - TVOS_SCHEME="ImageExtract-tvOS"

matrix:
  include:
    # iOS Tests
    - os: osx
      language: objective-c
      osx_image: xcode10.1
      env: DESTINATION="OS=12.1,name=iPhone X" SCHEME="$IOS_SCHEME" CARTHAGE_PLATFORM="iOS" RUN_TESTS="YES" LINT="NO" COVERAGE="YES" CODECOV_FLAG="ios12"
    - os: osx
      language: objective-c
      osx_image: xcode10.1
      env: DESTINATION="OS=11.4,name=iPhone 7 Plus" SCHEME="$IOS_SCHEME" CARTHAGE_PLATFORM="iOS" RUN_TESTS="YES" LINT="YES" COVERAGE="NO" CODECOV_FLAG="ios11"
    - os: osx
      language: objective-c
      osx_image: xcode10.1
      env: DESTINATION="OS=10.3.1,name=iPhone 6" SCHEME="$IOS_SCHEME" CARTHAGE_PLATFORM="iOS" RUN_TESTS="YES" LINT="NO" COVERAGE="NO" CODECOV_FLAG="ios10"
    - os: osx
      language: objective-c
      osx_image: xcode10.1
      env: DESTINATION="OS=9.3,name=iPhone 5s" SCHEME="$IOS_SCHEME" CARTHAGE_PLATFORM="iOS" RUN_TESTS="YES" LINT="NO" COVERAGE="NO" CODECOV_FLAG="ios9"
    # tvOS Tests
    - os: osx
      language: objective-c
      osx_image: xcode10.1
      env: DESTINATION="OS=12.1,name=Apple TV 4K" SCHEME="$TVOS_SCHEME" CARTHAGE_PLATFORM="tvOS" RUN_TESTS="YES" LINT="NO" COVERAGE="NO" CODECOV_FLAG="tvos12"
    - os: osx
      language: objective-c
      osx_image: xcode10.1
      env: DESTINATION="OS=11.4,name=Apple TV 4K" SCHEME="$TVOS_SCHEME" CARTHAGE_PLATFORM="tvOS" RUN_TESTS="YES" LINT="NO" COVERAGE="NO" CODECOV_FLAG="tvos11"
    - os: osx
      language: objective-c
      osx_image: xcode10.1
      env: DESTINATION="OS=10.2,name=Apple TV 1080p" SCHEME="$TVOS_SCHEME" CARTHAGE_PLATFORM="tvOS" RUN_TESTS="YES" LINT="NO" COVERAGE="NO" CODECOV_FLAG="tvos10"
    # macOS Tests
    - os: osx
      language: objective-c
      osx_image: xcode10.1
      env: DESTINATION="arch=x86_64" SCHEME="$MACOS_SCHEME" CARTHAGE_PLATFORM="Mac" RUN_TESTS="YES" LINT="NO" COVERAGE="NO" CODECOV_FLAG="macos"

before_install:
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then
    gem install xcpretty -N --no-ri --no-rdoc;
    gem install cocoapods --pre --no-rdoc --no-ri --no-document;
    brew update;
    brew outdated carthage || brew upgrade carthage;
    carthage bootstrap --verbose --no-use-binaries --platform $CARTHAGE_PLATFORM --cache-builds;
    fi

install:
  - ./install-swiftlint.sh;

script:
  - set -o pipefail;
  - swift -version;

  - xcrun simctl list;
  - xcodebuild -version;
  - xcodebuild -showsdks;
  - xcodebuild -list;

  - if [ "$RUN_TESTS" == "YES" ]; then
    xcodebuild clean test -project "$XCODEPROJ" -scheme "$SCHEME" -destination "$DESTINATION" -enableCodeCoverage YES | xcpretty -c;
    elif [ "$RUN_TESTS" == "NO" ]; then
    xcodebuild clean build -project "$XCODEPROJ" -scheme "$SCHEME" -destination "$DESTINATION" -configuration Release | xcpretty -c;
    fi

  - if [ "$LINT" == "YES" ]; then
    swiftlint;
    carthage build --no-skip-current;
    fi

after_success:
  - if [ "$COVERAGE" == "YES" ]; then
    bash <(curl -s https://codecov.io/bash) -J 'ImageExtract' -cF "$CODECOV_FLAG" -y ".codecov.yml";
    fi

notifications:
  email: false
